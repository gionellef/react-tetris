{"version":3,"sources":["gameHelpers.js","components/styles/StyledTetris.js","tetrominos.js","hooks/usePlayer.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/Tetris.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","index.js","img/bg.png"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","tetrominoS","0","shape","color","I","J","L","O","S","T","Z","randomtetromino","randtetromino","Math","floor","random","usePlayer","useState","collided","setPlayer","rotate","matrix","dir","rotatedTetro","map","_","index","col","row","reverse","resetPlayer","useCallback","STAGE_WIDTH","prev","clonedPlayer","JSON","parse","stringify","offset","useStage","gameOver","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","cell","forEach","value","reduce","ack","findIndex","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","React","memo","Stage","key","StyledDisplay","Display","text","StyledStartButton","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","hard","setHard","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","console","log","dropPlayer","move","keyCode","pot","hardDropPlayer","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","className","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e74f9d64.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () =>\n    new Array(STAGE_WIDTH).fill([0, 'clear'])\n  )\n\nexport const checkCollision = (player, stage, { x: moveX, y:moveY }) => {\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x+=1) {\n\n      // 1. Check that we're on an actual tetromino cell\n      if (player.tetromino[y][x] !== 0) {\n        // 2. Check that tetromino is still inside the game area\n        // 3. Check that cell we're moving to isn't set to clear\n\n        if (!stage[y + player.pos.y + moveY] || \n            !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||  \n            stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !== 'clear') {\n              return true; //collision detected \n        \n        }\n      }\n    }\n  }\n}","import styled from 'styled-components';\n\nimport bgImage from '../../img/bg.png';\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: url(${bgImage}) #000;\n  background-size: cover;\n  overflow: hidden;\n`\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n`","export const tetrominoS = {\n  0: { shape: [[0]], color: '0, 0, 0' },\n  I: {\n    shape:\n          [\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0]\n          ],\n    color: '80, 227, 230',\n  },\n  J: {\n    shape:\n      [\n        [0, 'J', 0],\n        [0, 'J', 0],\n        ['J', 'J', 0]\n      ],\n    color: '36, 95, 223',\n  },\n  L: {\n    shape:\n      [\n        [0, 'L', 0],\n        [0, 'L', 0],\n        [0, 'L', 'L']\n      ],\n    color: '223, 173, 36',\n  },\n  O: {\n    shape:\n      [\n        ['O', 'O'],\n        ['O', 'O']\n      ],\n    color: '223, 217, 36',\n  },\n  S: {\n    shape:\n      [\n        [0, 'S', 'S'],\n        ['S', 'S', 0],\n        [0, 0, 0]\n      ],\n    color: '48, 211, 56',\n  },\n  T: {\n    shape:\n      [\n        [0, 0, 0],\n        ['T', 'T', 'T'],\n        [0, 'T', 0]\n      ],\n    color: '132, 61, 198',\n  },\n  Z: {\n    shape:\n      [\n        ['Z', 'Z', 0],\n        [0, 'Z', 'Z'],\n        [0, 0, 0]\n      ],\n    color: '227, 78, 78',\n  }\n}\n\nexport const randomtetromino = () => {\n  const tetrominos = \"IJLOSTZ\";\n  const randtetromino = \n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\n  return tetrominoS[randtetromino];\n}","import { useState, useCallback } from 'react';\n\nimport { tetrominoS, randomtetromino } from '../tetrominos';\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\n\nexport const usePlayer = () => {\n const [player, setPlayer] = useState({\n   pos: { x: 0, y: 0 },\n   tetromino: tetrominoS[0].shape,\n   collided: false,\n });\n\n const rotate = (matrix, dir) => {\n   // transpose cols to rows (transpose)\n   const rotatedTetro = matrix.map((_, index) =>\n     matrix.map(col => col[index]),\n   );\n\n   // reverse each row to get a rotated matrix\n   if (dir > 0) return rotatedTetro.map(row => row.reverse());\n   return rotatedTetro.reverse();\n }\n\n const playerRotate = (stage, dir) => {\n   const clonedPlayer = JSON.parse(JSON.stringify(player));\n   clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n   const pos = clonedPlayer.pos.x;\n   let offset = 1;\n   while(checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n   }\n\n   setPlayer(clonedPlayer);\n }\n\n const updatePlayerPos = ({ x, y, collided }) => {\n   setPlayer(prev => ({\n     ...prev,\n     pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\n     collided,\n   }))\n }\n \n const resetPlayer = useCallback(() => {\n   setPlayer({\n     pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n     tetromino: randomtetromino().shape,\n     collided: false,\n  })\n }, [])\n\n return [player, updatePlayerPos, resetPlayer, playerRotate];\n}","import { useState, useEffect } from 'react';\n\nimport { createStage } from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer, gameOver) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n\n  useEffect(() => {\n    setRowsCleared(0);\n\n    const sweepRows = newStage =>\n      newStage.reduce((ack, row) => {\n        if (row.findIndex(cell => cell[0] === 0) === -1) { // row without 'clear' a.k.a sweepable\n          setRowsCleared(prev => prev + 1);\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n          return ack;\n        }\n        ack.push(row);\n        return ack;\n      }, [])\n\n    const updateStage = prevStage => {\n      // first flush the stage\n      const newStage = prevStage.map(row => \n          row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell))\n      );\n\n      // Now, draw the tetromino\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              value,\n              `${player.collided ? 'merged' : 'clear'}`,\n            ];\n          }\n        });\n      });\n\n      //Then check if we collided\n      if (player.collided) {\n        if (!gameOver) {\n          resetPlayer();\n        }\n        return sweepRows(newStage);\n      }\n\n      return newStage;\n    };\n\n    setStage(prev => updateStage(prev));\n  }, [player, resetPlayer, gameOver]);\n\n  return [stage, setStage, rowsCleared];\n};","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc(25vw / ${props => props.width})\n  );\n  grid-template-columns: repeat(${props => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #333;\n  width: 100%;\n  max-width: 25vw;\n  background: #111;\n`","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n  width: auto;\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`","import React from 'react';\n\nimport { StyledCell } from './styles/StyledCell';\nimport { tetrominoS } from '../tetrominos';\n\nconst Cell = ({ type }) => (\n\t<StyledCell type={type} color={tetrominoS[type].color} />\n)\n\nexport default React.memo(Cell);","import React from 'react';\n\nimport { StyledStage } from './styles/StyledStage';\n\nimport Cell from './Cell';\n\nconst Stage = ({ stage }) => (\n\t<StyledStage width={stage[0].length} height={stage.length}>\n\t\t{stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n\t</StyledStage>\n)\n\nexport default Stage;","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #333;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? 'red' : '#999')};\n  background: #000;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`","import React from 'react';\n\nimport { StyledDisplay } from './styles/StyledDisplay';\n\nconst Display = ({ gameOver, text }) => (\n\t<StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n)\n\nexport default Display;","import styled from 'styled-components';\n\nexport const StyledStartButton = styled.div`\n  box-sizing: border-box;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  border: none;\n  color: white;\n  background: #333;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`","import React from 'react';\n\nimport { StyledStartButton } from './styles/StyledStartButton';\n\nconst StartButton = ({ callback }) => (\n\t<StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n)\n\nexport default StartButton;","import React, { useState, useEffect } from 'react';\n\nimport { createStage, checkCollision } from '../gameHelpers';\n\n// Styled Components\nimport { StyledTetrisWrapper, StyledTetris} from './styles/StyledTetris';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = () => {\n\tconst [dropTime, setDropTime] = useState(null);\n\tconst [gameOver, setGameOver] = useState(false);\n\tconst [hard, setHard] = useState(false);\n\n\tconst [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n\tconst [stage, setStage, rowsCleared] = useStage(player, resetPlayer, gameOver);\n\tconst [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\n\n\tconst movePlayer = dir => {\n\t\tif (!checkCollision(player, stage, { x: dir, y: 0 })) {\n\t\t\tupdatePlayerPos({ x: dir, y: 0 });\n\t\t}\n\t}\n\n\tconst startGame = () => {\n\t\t// Reset everything\t\n\t\tsetStage(createStage());\n\t\tsetDropTime(1000);\n\t\tresetPlayer();\n\t\tsetGameOver(false);\n\t\tsetScore(0);\n\t\tsetRows(0);\n\t\tsetLevel(0);\n\t}\n\n\tconst drop = () => {\n\t\t// increase level when player clears 10 rows\n\t\tif (rows > (level + 1) * 10) {\n\t\t\tsetLevel(prev => prev + 1);\n\n\t\t\t// increase speed\n\t\t\tsetDropTime(1000/(level + 1) + 200);\n\t\t}\n\n\t\tif (!hard && !checkCollision(player, stage, { x: 0, y: 1 })) {\n\t\t\tupdatePlayerPos({ x: 0, y: 1, collided: false })\n\t\t} else {\n\t\t\t//Game Over\n\t\t\tif (player.pos.y < 2) {\n\t\t\t\tconsole.log(\"GAME OVER!!!\");\n\t\t\t\tsetGameOver(true);\n\t\t\t\tsetDropTime(null);\n\t\t\t}\n\t\t\tupdatePlayerPos({ x: 0, y: 0, collided: true });\n\t\t}\n\t}\n\t\n\tconst dropPlayer = () => {\n\t\t// console.log(\"interval off\");\n\t\tsetDropTime(null);\n\t\tdrop();\n\t}\n\t\n\tconst keyUp = ({ keyCode }) => {\n\t\tif (!gameOver) {\n\t\t\tif (keyCode === 40) {\n\t\t\t\t// console.log(\"interval on\");\n\t\t\t\tsetDropTime(1000 / (level + 1) + 200);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tconst hardDropPlayer = () => {\t\t\n\t\tsetHard(true);\n\t\tlet pot = 1;\n\t\t\n\t\twhile (!checkCollision(player, stage, { x: 0, y: pot })) {\n\t\t\tpot += 1;\n\t\t}\n\t\t\n\t\tupdatePlayerPos({ x: 0, y: pot-1, collided: false });\n\t\tsetHard(false);\n\t}\n\t\n\tconst move = ({ keyCode }) => {\n\t\tif (!gameOver) {\n\t\t\tif (keyCode === 37) { // left\n\t\t\t\tmovePlayer(-1);\n\t\t\t} else if (keyCode === 39) { // right\n\t\t\t\tmovePlayer(1);\n\t\t\t} else if (keyCode === 40) { // down\n\t\t\t\tdropPlayer();\n\t\t\t} else if (keyCode === 38) { \n\t\t\t\tplayerRotate(stage, 1);\n\t\t\t} else if (keyCode === 32) {\n\t\t\t\thardDropPlayer();\n\t\t\t}\n\t\t}\n\t}\n\t\n\tuseEffect(() => {\n\t\tif (hard === false) {\n\t\t\tdropPlayer();\n\t\t}\n\t}, [hard]); // <== will run when hard value is changed.\n\n\tuseInterval(() => {\n\t\tdrop();\n\t}, dropTime)\n\t\n\treturn (\n\t\t<StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)} onKeyUp={keyUp}>\n\t\t\t<StyledTetris>\n\t\t\t\t<Stage stage={stage}/>\n\t\t\t\t<aside>\n\t\t\t\t\t{gameOver ? (\n\t\t\t\t\t\t<Display gameOver={gameOver} text=\"Game Over\" />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Display text={`Score: ${score}`} />\n\t\t\t\t\t\t\t<Display text={`Rows: ${rows}`} />\n\t\t\t\t\t\t\t<Display text={`Level: ${level + 1}`} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<StartButton callback={startGame} />\n\t\t\t\t</aside>\n\t\t\t</StyledTetris>\n\t\t</StyledTetrisWrapper>\n\t)\n};\n\nexport default Tetris;\n","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = rowsCleared => {\n  const [score, setScore] = useState(0);\n  const [rows, setRows] = useState(0);\n  const [level, setLevel] = useState(0);\n\n  const linePoints = [40, 100, 300, 1200];\n\n  const calcScore = useCallback(() => {\n    // We have score\n    if (rowsCleared > 0) {\n      // Original tetris game scoring (wikipedia)\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n      setRows(prev => prev + rowsCleared);\n    }\n  }, [level, linePoints, rowsCleared]) // same calscore if nothing in this list changes\n\n  // fires off automatically\n  useEffect(() => {\n    calcScore();\n  }, [calcScore, rowsCleared, score]); // this useeffect depends on this list\n\n  return [score, setScore, rows, setRows, level, setLevel];\n};","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n  <div className=\"App\">\n    <Tetris />\n  </div>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n","module.exports = __webpack_public_path__ + \"static/media/bg.2810fe6b.png\";"],"sourceRoot":""}